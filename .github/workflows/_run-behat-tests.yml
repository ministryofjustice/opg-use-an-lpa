name: "[Behat] Run behat tests"

defaults:
  run:
    shell: bash

on:
  workflow_call:
    inputs:
      workspace:
        description: 'Terraform workspace'
        required: true
        type: string
    outputs:
      behat_test_duration:
        description: 'Duration of the Behat test step'
        value: ${{ jobs.build-web.outputs.behat_test_duration }}

jobs:
  build-web:
    runs-on: ubuntu-latest
    outputs:
      behat_test_duration: ${{ steps.calculate-behat-duration.outputs.duration }}
    steps:
      - uses: actions/checkout@44c2b7a8a4ea60a981eaca3cf939b5f4305c123b # pin@v3

      - name: install python
        uses: actions/setup-python@82c7e631bb3cdc910f68e0081d67478d79c6982d # pin@v4.2.0
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: install chrome
        uses: browser-actions/setup-chrome@latest # pin@NoVersions

      - name: Setup PHP
        uses: shivammathur/setup-php@fc14643b0a99ee9db10a3c025a33d76544fa3761 # pin@v2.21.2
        with:
          php-version: 8.3

      - name: show versions
        run: |
          chrome --version
          python --version
          pip --version
          php --version
          composer --version

      - name: install and configure dependencies
        run: composer install --prefer-dist --no-suggest --no-interaction --no-scripts --optimize-autoloader
        working-directory: tests/smoke

      - name: download cluster_config
        uses: actions/download-artifact@65a9edc5881444af0b9093a5e628f2fe47ea3b2e
        with:
          name: environment_config_file_${{ inputs.workspace }}
          path: terraform/environment

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@a78e788c51463a506fbaaec784bab37f73afb4e8 # pin@v1.7.0
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_ACTIONS }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_ACTIONS }}
          aws-region: eu-west-1
          role-duration-seconds: 1800
          role-session-name: OPGUseAnLPABehatGithubAction

      - name: allow gh actions ingress to environment
        env:
          TF_WORKSPACE: ${{ inputs.workspace }}
        run: |
          pip install boto3
          echo ${TF_WORKSPACE}
          if [[ "${TF_WORKSPACE}" != "production" ]]; then
            python scripts/pipeline/ci_ingress/ci_ingress.py ./terraform/environment/cluster_config.json --add
          fi

      - name: begin recording behat duration
        id: behat-start-time
        run: echo "behat_start_time=$(date +%s)" >> $GITHUB_ENV

      - name: run behat test suite
        run: |
          viewer_fqdn=$(cat ./terraform/environment/cluster_config.json | jq .viewer_fqdn | xargs)
          use_fqdn=$(cat ./terraform/environment/cluster_config.json | jq .use_fqdn | xargs)
          public_facing_view_fqdn=$(cat ./terraform/environment/cluster_config.json | jq .public_facing_view_fqdn | xargs)
          public_facing_use_fqdn=$(cat ./terraform/environment/cluster_config.json | jq .public_facing_use_fqdn | xargs)
          ff_allow_gov_one_login=$(cat ./terraform/environment/cluster_config.json | jq .ff_allow_gov_one_login | xargs)

          ln -sf ../features tests/smoke/features

          cd tests/smoke
          BEHAT_VIEWER_URL=https://$public_facing_view_fqdn \
            BEHAT_ACTOR_URL=https://$public_facing_use_fqdn \
            BEHAT_OLD_VIEWER_URL=https://$viewer_fqdn \
            BEHAT_OLD_ACTOR_URL=https://$use_fqdn \
            BEHAT_FF_ALLOW_GOV_ONE_LOGIN=$ff_allow_gov_one_login \
            vendor/bin/behat

      - name: archive failed test screenshots
        uses: actions/upload-artifact@552bf3722c16e81001aea7db72d8cedf64eb5f68 # pin@v3.1.0
        with:
          name: behat-screenshots
          path: tests/smoke/failed_step_screenshots
        if: always()

      - name: end recording behat duration
        id: behat-end-time
        run: echo "behat_end_time=$(date +%s)" >> $GITHUB_ENV

      - name: calculate behat duration
        id: calculate-behat-duration
        run: |
          duration=$(( $behat_end_time - $behat_start_time ))
            if [ $duration -ge 60 ]; then
              minutes=$(( duration / 60 ))
              seconds=$(( duration % 60 ))
              formatted_duration="${minutes}min ${seconds}s"
            else
              formatted_duration="${duration}s"
            fi

            echo "duration=$formatted_duration" >> $GITHUB_OUTPUT
        env:
          behat_start_time: ${{ env.behat_start_time }}
          behat_end_time: ${{ env.behat_end_time }}

      - name: remove gh actions ingress to environment
        env:
          TF_WORKSPACE: ${{ inputs.workspace }}
        run: |
          echo ${TF_WORKSPACE}
          python scripts/pipeline/ci_ingress/ci_ingress.py ./terraform/environment/cluster_config.json
        if: always()
