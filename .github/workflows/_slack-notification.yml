name: "[Slack] Send slack notification"

defaults:
  run:
    shell: bash

on:
  workflow_call:
    inputs:
      template:
        description: 'Template to use'
        required: true
        type: string
      workflow_status:
        description: 'Status of the workflow'
        required: false
        type: string
        default: failure
      workspace:
        description: 'Suffix of the environment_config_file_ artifact to download'
        required: true
        type: string
    secrets:
      webhook:
        required: true

jobs:
  send-slack-notification:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@cbb722410c2e876e24abbe8de2cc27693e501dcb # pin@v3

      - name: install python
        uses: actions/setup-python@55aad42e4674b58b2b2fb7d8e7552402d922b4e7 # pin@v4.2.0
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: install requirements
        run: pip install -r scripts/pipeline/requirements.txt

      - name: download cluster_config
        uses: actions/download-artifact@d0ce8fd1167ed839810201de977912a090ab10a7
        with:
          name: environment_config_file_${{ inputs.workspace }}
          path: /tmp
        if: inputs.workflow_status == 'success'

      - name: Notify Slack Success
        env:
          SLACK_WEB_HOOK: ${{ secrets.webhook }}
          TEMPLATE: ${{ inputs.template }}
        if: inputs.workflow_status == 'success'
        run: |
          commit_message="Merge ${{ github.head_ref }} into ${{ github.base_ref }}"

          if [[ ${{ inputs.template }} != "successful_dev_build.txt" ]]
          then
            commit_message="$(git log -1 --pretty=%B)"
          fi

          python scripts/pipeline/post_release_slack_notification/post_release_slack_notification.py \
            --slack_webhook ${SLACK_WEB_HOOK} \
            --template_path scripts/pipeline/post_release_slack_notification/${TEMPLATE} \
            --commit_message "$commit_message"

      - name: Notify Slack Failure
        env:
          SLACK_WEB_HOOK: ${{ secrets.webhook }}
        if: inputs.workflow_status != 'success'
        run: |
          echo "{}" > /tmp/cluster_config.json
          python scripts/pipeline/post_release_slack_notification/post_release_slack_notification.py \
          --slack_webhook ${SLACK_WEB_HOOK} \
          --template_path scripts/pipeline/post_release_slack_notification/unsuccessful_release.txt \
          --commit_message "$(git log -2 --pretty=%B)"
