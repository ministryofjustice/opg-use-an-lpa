name: Psalm Static analysis - Service Front

on:
  pull_request:
    paths:
    # only run when service-front is changed
      - 'service-front/app/**'

permissions:
  actions: read
  checks: read
  contents: read
  deployments: read
  issues: read
  packages: read
  pull-requests: read
  repository-projects: read
  security-events: read
  statuses: read

env:
  SERVICE-PATH: service-front

jobs:
  psalm:
    name: Psalm
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.SERVICE-PATH }}/app
    steps:
      - name: Checkout code
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0

      - name: Setup PHP with tools
        uses: shivammathur/setup-php@cf4cade2721270509d5b1c766ab3549210a39a2a # 2.33.0
        with:
          php-version: 8.3
          tools: vimeo/psalm:5
          extensions: apcu, intl, json, redis
          coverage: none

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache dependencies
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Composer install
        run: composer install --prefer-dist

      - name: Run psalm
        run: vendor/bin/psalm --output-format=github --long-progress

      - name: Run psalm taint analysis
        run: vendor/bin/psalm --output-format=github --taint-analysis --report=results.sarif --long-progress --ignore-baseline

      - name: Upload Security Analysis results to GitHub
        uses: github/codeql-action/upload-sarif@ff0a06e83cb2de871e5a09832bc6a81e7276941f # v3.28.18
        with:
          sarif_file: ./${{ env.SERVICE-PATH }}/app/results.sarif
