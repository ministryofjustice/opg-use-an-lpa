volumes:
  esbuild:

services:
  # ---------------------------
  # Asset build

  esbuild:
    container_name: esbuild
    build:
      context: .
      dockerfile: service-front/web/Dockerfile
    entrypoint: >
      sh -c "npm ci --verbose && npm run build"
    volumes:
      - ./service-front/web:/web:rw
      - esbuild:/web/dist

  # ---------------------------
  # Viewer Front

  viewer-web:
    container_name: viewer-web
    build:
      context: .
      dockerfile: service-front/docker/web/Dockerfile
    volumes:
      - esbuild:/web
    environment:
      WEB_DOMAIN: http://localhost:9001
      APP_HOST: viewer-app
      APP_PORT: 9000
    depends_on:
      - esbuild
      - viewer-app

  viewer-app:
    container_name: viewer-app
    build:
      target: development
      context: .
      dockerfile: service-front/docker/app/Dockerfile
    volumes:
      - ./service-front/app:/app
      - esbuild:/app/assets
    environment:
      # Always required
      CONTEXT: "viewer"
      GOOGLE_ANALYTICS_ID: "UA-170469426-2"
      KMS_SESSION_CMK_ALIAS: "alias/viewer-sessions-cmk-alias"

      # Local only
      API_SERVICE_URL:
      PDF_SERVICE_URL:
      AWS_ENDPOINT_KMS:
      AWS_ACCESS_KEY_ID: "devkey"
      AWS_SECRET_ACCESS_KEY: "secretdevkey"
      LOGGING_LEVEL: "100" # \Monolog\Logger::DEBUG
      PHP_IDE_CONFIG: serverName=viewer-app
      XDEBUG_CONFIG: client_host=host.docker.internal
      XDEBUG_MODE: develop,debug,coverage # off # xdebug can be disable by replacing modes with "off"
      SESSION_EXPIRES: 30 # session expiry length to support timeout message.
      COOKIE_EXPIRES: 1440 # cookie expiry for complete logout - initial value to be 24 hours.
      SUPPORT_DATASTORE_LPAS: "false"
      PAPER_VERFICATION: "false"
    depends_on:
      - api-web

  # ---------------------------
  # Actor Front

  actor-web:
    container_name: actor-web
    build:
      context: .
      dockerfile: service-front/docker/web/Dockerfile
    volumes:
      - esbuild:/web
    environment:
      WEB_DOMAIN: http://localhost:9002
      APP_HOST: actor-app
      APP_PORT: 9000
    depends_on:
      - esbuild
      - actor-app

  actor-app:
    container_name: actor-app
    build:
      target: development
      context: .
      dockerfile: service-front/docker/app/Dockerfile
    volumes:
      - ./service-front/app:/app
      - esbuild:/app/assets
    environment:
      # Always required
      CONTEXT: "actor"
      GOOGLE_ANALYTICS_ID: "UA-170469426-1"
      KMS_SESSION_CMK_ALIAS: "alias/viewer-sessions-cmk-alias"

      # Feature flags
      DELETE_LPA_FEATURE: "true"
      ALLOW_MERIS_LPAS: "false"
      SUPPORT_DATASTORE_LPAS: "false"

      # Local only
      API_SERVICE_URL:
      AWS_ENDPOINT_KMS:
      AWS_ACCESS_KEY_ID: "devkey"
      AWS_SECRET_ACCESS_KEY: "secretdevkey"
      LOGGING_LEVEL: "100" # \Monolog\Logger::DEBUG
      PHP_IDE_CONFIG: serverName=actor-app
      XDEBUG_CONFIG: client_host=host.docker.internal
      XDEBUG_MODE: develop,debug,coverage # off # xdebug can be disable by replacing modes with "off"
      SESSION_EXPIRES: 20 # session expiry length to support timeout message.
      SESSION_EXPIRY_WARNING: 5 # session expiry warning time to trigger popup window.
      COOKIE_EXPIRES: 1440 # cookie expiry for complete logout - initial value to be 24 hours.
      NOTIFY_API_KEY:
    depends_on:
      - api-web

  # ---------------------------
  # Front Composer (Shared)

  front-composer:
    profiles:
      - tools
    build:
      target: development
      context: .
      dockerfile: service-front/docker/app/Dockerfile
    volumes:
      - ./service-front/app:/app
    entrypoint:
      - /usr/bin/composer
    command:
      - install
      - --prefer-dist
      - --no-suggest
      - --no-interaction
      - --no-scripts
      - --optimize-autoloader

  # ---------------------------
  # API

  api-web:
    container_name: api-web
    build:
      context: .
      dockerfile: service-api/docker/web/Dockerfile
    volumes:
      - ./service-api/web/dist:/web
    ports:
      - 9010:80
    environment:
      APP_HOST: api-app
      APP_PORT: 9000
    depends_on:
      - api-app

  api-app:
    container_name: api-app
    build:
      target: development
      context: .
      dockerfile: service-api/docker/app/Dockerfile
    volumes:
      - ./service-api/app:/app
    environment:
      DYNAMODB_TABLE_ACTOR_CODES: "ActorCodes"
      DYNAMODB_TABLE_ACTOR_USERS: "ActorUsers"
      DYNAMODB_TABLE_VIEWER_CODES: "ViewerCodes"
      DYNAMODB_TABLE_VIEWER_ACTIVITY: "ViewerActivity"
      DYNAMODB_TABLE_USER_LPA_ACTOR_MAP: "UserLpaActorMap"
      DYNAMODB_TABLE_STATS: "Stats"

      SIRIUS_API_ENDPOINT:
      LPA_DATA_STORE_API_ENDPOINT:
      LPA_CODES_API_ENDPOINT:
      IAP_IMAGES_API_ENDPOINT:

      ONE_LOGIN_CLIENT_ID: "client-id"
      ONE_LOGIN_DISCOVERY_URL:

      # Feature flags
      ALLOW_MERIS_LPAS: "false"
      SUPPORT_DATASTORE_LPAS: "true"

      # Local only
      AWS_ACCESS_KEY_ID: "devkey"
      AWS_ENDPOINT_DYNAMODB:
      AWS_ENDPOINT_SECRETSMANAGER:
      AWS_ENDPOINT_SSM:
      AWS_SECRET_ACCESS_KEY: "secretdevkey"
      LPA_CODES_STATIC_AUTH_TOKEN: asdf1234567890
      PACT_BROKER_PUBLISH: "false"
      LOGGING_LEVEL: "100" # \Monolog\Logger::DEBUG
      PHP_IDE_CONFIG: serverName=api-app
      XDEBUG_CONFIG: client_host=host.docker.internal
      XDEBUG_MODE: develop,debug,coverage # off # xdebug can be disable by replacing modes with "off"
      XDEBUG_TRIGGER: "true"
      NOTIFY_API_KEY:

  api-composer:
    profiles:
      - tools
    build:
      target: development
      context: .
      dockerfile: service-api/docker/app/Dockerfile
    volumes:
      - ./service-api/app:/app
    entrypoint:
      - /usr/bin/composer
    command:
      - install
      - --prefer-dist
      - --no-interaction
      - --no-scripts
      - --optimize-autoloader

  api-seeding:
    container_name: api-seeding
    build:
      context: .
      dockerfile: service-api/docker/seeding/Dockerfile
    volumes:
      - ./service-api/seeding:/app/seeding
    environment:
      AWS_ACCESS_KEY_ID: "devkey"
      AWS_SECRET_ACCESS_KEY: "secretdevkey"
      DYNAMODB_TABLE_ACTOR_CODES: "ActorCodes"
      DYNAMODB_TABLE_VIEWER_CODES: "ViewerCodes"
      DYNAMODB_TABLE_ACTOR_USERS: "ActorUsers"
      DYNAMODB_TABLE_USER_LPA_ACTOR_MAP: "UserLpaActorMap"
      DYNAMODB_TABLE_STATS: "Stats"
      AWS_ENDPOINT_DYNAMODB:
      CODES_ENDPOINT:

  # ---------------------------
  # Lambda to upload stats

  upload-stats-lambda:
    container_name: upload-statistics
    build:
      context: ./lambda-functions/upload-statistics
      dockerfile: Dockerfile
    environment:
      ENVIRONMENT: local
      REGION: eu-west-1
      AWS_ACCESS_KEY_ID: 'devkey'
      AWS_SECRET_ACCESS_KEY: 'secretdevkey'
    depends_on:
      - localstack
    volumes:
      - ./lambda-functions/upload-statistics/app:/function/app
      - ./lambda-functions/.aws-lambda-rie:/aws-lambda
    ports:
      - 9007:8080


  # ---------------------------
  # Lambda for ingestion from MLPA

  event-receiver-lambda:
    container_name: event-receiver
    build:
      context: ./lambda-functions/event-receiver
      dockerfile: Dockerfile
    environment:
      AWS_LAMBDA_SERVER_PORT: '8080'
      AWS_LAMBDA_RUNTIME_API: 'localhost:8080'
      ENVIRONMENT: local
      REGION: eu-west-1
      AWS_ACCESS_KEY_ID: 'devkey'
      AWS_SECRET_ACCESS_KEY: 'secretdevkey'
    volumes:
      - ./lambda-functions/event-receiver/app:/function/app
      - ./lambda-functions/.aws-lambda-rie:/aws-lambda
    entrypoint:
      - /aws-lambda/aws-lambda-rie
    command:
      - ./main
    ports:
      - 9008:8080

  proxy:
    container_name: proxy
    image: traefik:3.0
    ports:
      - "9001:9001"
      - "9041:9041"
      - "9002:9002"
      - "9042:9042"
      - "9080:8080"
    volumes:
      - ./local-config/proxy/traefik.toml:/etc/traefik/traefik.toml
      - ./local-config/proxy/dynamic.toml:/etc/traefik/dynamic.toml
    depends_on:
      - actor-web
      - viewer-web
