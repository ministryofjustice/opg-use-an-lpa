version: "3.8"

volumes:
  webpack_dist:

services:
  # ---------------------------
  # Webpack Watch for Development

  webpack:
    container_name: webpack
    image: webpack
    build:
      context: .
      dockerfile: service-front/web/Dockerfile
    entrypoint: >
      sh -c "npm ci && npm run build-scss && npm run build:pdf && npm run watch"
    volumes:
      - ./service-front/web:/web:rw,delegated
      - webpack_dist:/dist

  # ---------------------------
  # Viewer Front

  service-pdf:
    container_name: service-pdf
    image: 311462405659.dkr.ecr.eu-west-1.amazonaws.com/pdf_service:v1.31.0
    ports:
      - 9004:80

  # ---------------------------
  # Viewer Front

  viewer-web:
    container_name: viewer-web
    image: front-web
    build:
      context: .
      dockerfile: service-front/docker/web/Dockerfile
    volumes:
      - webpack_dist:/web
    ports:
      - 9001:80
    environment:
      APP_HOST: viewer-app
      APP_PORT: 9000
      NGINX_LOG_LEVEL: warn
    depends_on:
      - webpack

  viewer-app:
    container_name: viewer-app
    image: viewer-app
    build:
      target: development
      context: .
      dockerfile: service-front/docker/app/Dockerfile
    volumes:
      - ./service-front/app:/app
      - webpack_dist:/app/assets
    environment:
      # Always required
      CONTEXT: "viewer"
      GOOGLE_ANALYTICS_ID: "UA-170469426-2"
      KMS_SESSION_CMK_ALIAS: "alias/viewer-sessions-cmk-alias"

      # Local only
      API_SERVICE_URL: http://api-web
      PDF_SERVICE_URL: http://service-pdf
      AWS_ENDPOINT_KMS: http://kms:8080
      AWS_ACCESS_KEY_ID: "-"
      AWS_SECRET_ACCESS_KEY: "-"
      LOGGING_LEVEL: "100" # \Monolog\Logger::DEBUG
      ENABLE_XDEBUG: "true"
      PHP_IDE_CONFIG: serverName=viewer-app
      XDEBUG_CONFIG: client_host=host.docker.internal client_port=9000
      XDEBUG_MODE: develop,debug,coverage
      SESSION_EXPIRES: 30 # session expiry length to support timeout message.
      COOKIE_EXPIRES: 1440 # cookie expiry for complete logout - initial value to be 24 hours.
      COOKIE_SECURE: "false"
    depends_on:
      - redis
#    healthcheck:
#      test:
#        [
#          "CMD-SHELL",
#          "SCRIPT_NAME=/ping SCRIPT_FILENAME=/ping REQUEST_METHOD=GET cgi-fcgi -bind -connect 127.0.0.1:9000"
#        ]
#      interval: 10s
#      timeout: 30s
#      retries: 3
#      start_period: 90s

  # ---------------------------
  # Actor Front

  actor-web:
    container_name: actor-web
    image: front-web
    build:
      context: .
      dockerfile: service-front/docker/web/Dockerfile
    volumes:
      - webpack_dist:/web
    ports:
      - 9002:80
    environment:
      APP_HOST: actor-app
      APP_PORT: 9000
      NGINX_LOG_LEVEL: warn
    depends_on:
      - webpack

  actor-app:
    container_name: actor-app
    image: actor-app
    build:
      target: development
      context: .
      dockerfile: service-front/docker/app/Dockerfile
    volumes:
      - ./service-front/app:/app
      - webpack_dist:/app/assets
    environment:
      # Always required
      CONTEXT: "actor"
      GOOGLE_ANALYTICS_ID: "UA-170469426-1"
      KMS_SESSION_CMK_ALIAS: "alias/viewer-sessions-cmk-alias"

      # Feature flags
      USE_OLDER_LPA_JOURNEY: "true"
      DELETE_LPA_FEATURE: "true"
      ALLOW_OLDER_LPAS: "true"
      ALLOW_MERIS_LPAS: "false"
      DONT_SEND_LPAS_REGISTERED_AFTER_SEP_2019_TO_CLEANSING_TEAM: "false"

      # Local only
      API_SERVICE_URL: http://api-web
      AWS_ENDPOINT_KMS: http://kms:8080
      AWS_ACCESS_KEY_ID: "-"
      AWS_SECRET_ACCESS_KEY: "-"
      LOGGING_LEVEL: "100" # \Monolog\Logger::DEBUG
      ENABLE_XDEBUG: "true"
      PHP_IDE_CONFIG: serverName=actor-app
      XDEBUG_CONFIG: client_host=host.docker.internal client_port=9000
      XDEBUG_MODE: develop,debug,coverage
      SESSION_EXPIRES: 20 # session expiry length to support timeout message.
      SESSION_EXPIRY_WARNING: 5 # session expiry warning time to trigger popup window.
      COOKIE_EXPIRES: 1440 # cookie expiry for complete logout - initial value to be 24 hours.
      COOKIE_SECURE: "false"
      NOTIFY_API_KEY:
#    healthcheck:
#      test:
#        [
#          "CMD-SHELL",
#          "SCRIPT_NAME=/ping SCRIPT_FILENAME=/ping REQUEST_METHOD=GET cgi-fcgi -bind -connect 127.0.0.1:9000"
#        ]
#      interval: 10s
#      timeout: 30s
#      retries: 3
#      start_period: 90s

  # ---------------------------
  # Front Composer (Shared)

  front-composer:
    image: actor-app
    volumes:
      - ./service-front/app:/app
    entrypoint:
      - /usr/bin/composer
    command:
      - install
      - --prefer-dist
      - --no-suggest
      - --no-interaction
      - --no-scripts
      - --optimize-autoloader

  # ---------------------------
  # API

  api-web:
    container_name: api-web
    image: api-web
    build:
      context: .
      dockerfile: service-api/docker/web/Dockerfile
    depends_on:
      - api-app
    volumes:
      - ./service-api/web/dist:/web
    ports:
      - 9003:80
    environment:
      APP_HOST: api-app
      APP_PORT: 9000
      NGINX_LOG_LEVEL: warn

  api-app:
    container_name: api-app
    image: api-app
    build:
      target: development
      context: .
      dockerfile: service-api/docker/app/Dockerfile
    depends_on:
      - dynamodb-local
    volumes:
      - ./service-api/app:/app
    networks:
      - default
    environment:
      DYNAMODB_TABLE_ACTOR_CODES: "ActorCodes"
      DYNAMODB_TABLE_ACTOR_USERS: "ActorUsers"
      DYNAMODB_TABLE_VIEWER_CODES: "ViewerCodes"
      DYNAMODB_TABLE_VIEWER_ACTIVITY: "ViewerActivity"
      DYNAMODB_TABLE_USER_LPA_ACTOR_MAP: "UserLpaActorMap"

      SIRIUS_API_ENDPOINT: "http://api-gateway:5000"
      LPA_CODES_API_ENDPOINT: "http://codes-gateway:4343"

      # Feature flags
      ALLOW_OLDER_LPAS: "true"
      ALLOW_MERIS_LPAS: "false"
      SAVE_OLDER_LPA_REQUESTS: "true"
      DONT_SEND_LPAS_REGISTERED_AFTER_SEP_2019_TO_CLEANSING_TEAM: "false"

      # Local only
      AWS_ACCESS_KEY_ID: "-"
      AWS_ENDPOINT_DYNAMODB: http://dynamodb-local:8000
      AWS_SECRET_ACCESS_KEY: "-"
      LPA_CODES_STATIC_AUTH_TOKEN: asdf1234567890
      PACT_BROKER_PUBLISH: "false"
      LOGGING_LEVEL: "100" # \Monolog\Logger::DEBUG
      ENABLE_XDEBUG: "true"
      PHP_IDE_CONFIG: serverName=api-app
      XDEBUG_CONFIG: client_host=host.docker.internal client_port=9000
      XDEBUG_MODE: develop,debug,coverage
      XDEBUG_TRIGGER: "true"
      NOTIFY_API_KEY:
#    healthcheck:
#      test:
#        [
#          "CMD-SHELL",
#          "SCRIPT_NAME=/ping SCRIPT_FILENAME=/ping REQUEST_METHOD=GET cgi-fcgi -bind -connect 127.0.0.1:9000"
#        ]
#      interval: 10s
#      timeout: 30s
#      retries: 3
#      start_period: 90s

  api-composer:
    image: api-app
    volumes:
      - ./service-api/app:/app
    entrypoint:
      - /usr/bin/composer
    command:
      - install
      - --prefer-dist
      - --no-suggest
      - --no-interaction
      - --no-scripts
      - --optimize-autoloader

  api-seeding:
    container_name: api-seeding
    build:
      context: .
      dockerfile: service-api/docker/seeding/Dockerfile
    depends_on:
      - dynamodb-local
    environment:
      AWS_ACCESS_KEY_ID: "-"
      AWS_SECRET_ACCESS_KEY: "-"
      DYNAMODB_TABLE_ACTOR_CODES: "ActorCodes"
      DYNAMODB_TABLE_VIEWER_CODES: "ViewerCodes"
      DYNAMODB_TABLE_ACTOR_USERS: "ActorUsers"
      DYNAMODB_TABLE_USER_LPA_ACTOR_MAP: "UserLpaActorMap"
      AWS_ENDPOINT_DYNAMODB: dynamodb-local:8000
      CODES_ENDPOINT: codes-gateway:4343
