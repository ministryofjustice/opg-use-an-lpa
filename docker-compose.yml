version: "2.1"

services:

  # ---------------------------
  # Viewer Front

  viewer-web:
    container_name: viewer-web
    image: front-web
    build:
      context: .
      dockerfile: service-front/docker/web/Dockerfile
    volumes:
      - ./service-front/web:/web
    ports:
      - 9001:80
    environment:
      APP_HOST: viewer-app
      APP_PORT: 9000
      NGINX_LOG_LEVEL: warn

  viewer-app:
    container_name: viewer-app
    image: viewer-app
    build:
      context: .
      dockerfile: service-front/docker/app/Dockerfile
    volumes:
      - ./service-front/app:/app
    environment:
      # Always required
      CONTEXT: 'viewer'
      KMS_SESSION_CMK_ALIAS: 'alias/viewer-sessions-cmk-alias'

      # Local only
      API_SERVICE_URL: http://api-web
      AWS_ENDPOINT_KMS: http://kms:8080
      AWS_ACCESS_KEY_ID: '-'
      AWS_SECRET_ACCESS_KEY: '-'
      ENABLE_XDEBUG: 'true'
      PHP_IDE_CONFIG: serverName=viewer-app
      XDEBUG_CONFIG: remote_host=host.docker.internal remote_enable=1


  # ---------------------------
  # Actor Front

  actor-web:
    container_name: actor-web
    image: front-web
    build:
      context: .
      dockerfile: service-front/docker/web/Dockerfile
    volumes:
      - ./service-front/web:/web
    ports:
      - 9002:80
    environment:
      APP_HOST: actor-app
      APP_PORT: 9000
      NGINX_LOG_LEVEL: warn

  actor-app:
    container_name: actor-app
    image: actor-app
    build:
      context: .
      dockerfile: service-front/docker/app/Dockerfile
    volumes:
      - ./service-front/app:/app
    environment:
      # Always required
      CONTEXT: 'actor'
      KMS_SESSION_CMK_ALIAS: 'alias/viewer-sessions-cmk-alias'

      # Local only
      AWS_ENDPOINT_KMS: http://kms:8080
      AWS_ACCESS_KEY_ID: '-'
      AWS_SECRET_ACCESS_KEY: '-'
      ENABLE_XDEBUG: 'true'
      PHP_IDE_CONFIG: serverName=viewer-app
      XDEBUG_CONFIG: remote_host=host.docker.internal remote_enable=1


  # ---------------------------
  # Front Composer (Shared)

  front-composer:
    image: composer
    volumes:
      - ./service-front/app:/app
    command:
      - install
      - --prefer-dist
      - --no-suggest
      - --no-interaction
      - --no-scripts
      - --optimize-autoloader

  # ---------------------------
  # API

  api-web:
    container_name: api-web
    image: api-web
    build:
      context: .
      dockerfile: service-api/docker/web/Dockerfile
    volumes:
      - ./service-api/web:/web
    ports:
      - 9003:80
    environment:
      APP_HOST: api-app
      APP_PORT: 9000
      NGINX_LOG_LEVEL: warn

  api-app:
    container_name: api-app
    image: api-app
    build:
      context: .
      dockerfile: service-api/docker/app/Dockerfile
    volumes:
      - ./service-api/app:/app
    environment:
      DYNAMODB_TABLE_VIEWER_CODES: 'ViewerCodes'

      # Local only
      AWS_ACCESS_KEY_ID: '-'
      AWS_ENDPOINT_DYNAMODB: http://localstack:4569
      AWS_SECRET_ACCESS_KEY: '-'
      ENABLE_XDEBUG: 'true'
      PHP_IDE_CONFIG: serverName=api-app
      XDEBUG_CONFIG: remote_host=host.docker.internal remote_enable=1

  api-composer:
    image: composer
    volumes:
      - ./service-api/app:/app
    command:
      - install
      - --prefer-dist
      - --no-suggest
      - --no-interaction
      - --no-scripts
      - --optimize-autoloader

  api-seeding:
    container_name: api-seeding
    build:
      context: .
      dockerfile: service-api/docker/seeding/Dockerfile
    depends_on:
      - localstack
    environment:
      AWS_ACCESS_KEY_ID: '-'
      AWS_SECRET_ACCESS_KEY: '-'
      DYNAMODB_TABLE_VIEWER_CODES: 'ViewerCodes'
      AWS_ENDPOINT_DYNAMODB: localstack:4569

  # ---------------------------
  # Local Development

  localstack:
    image: localstack/localstack
    ports:
      - 4569:4569
    environment:
      - SERVICES=dynamodb:4569
      - DEFAULT_REGION=eu-west-1
      - HOSTNAME=localstack

  kms:
    image: nsmithuk/local-kms:2
    volumes:
      - ./local-config:/init
    environment:
      REGION: eu-west-1
      SEED_PATH: /init/kms-seed.yaml

  feature-tests:
    build:
      context: .
      dockerfile: features/Dockerfile
    volumes:
      - ./features:/feature-tests
