// Code generated by mockery v2.51.0. DO NOT EDIT.

package mocks

import (
	aws "github.com/aws/aws-sdk-go-v2/aws"
	mock "github.com/stretchr/testify/mock"
)

// Factory is an autogenerated mock type for the Factory type
type Factory struct {
	mock.Mock
}

// GetAWSConfig provides a mock function with no fields
func (_m *Factory) GetAWSConfig() aws.Config {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetAWSConfig")
	}

	var r0 aws.Config
	if rf, ok := ret.Get(0).(func() aws.Config); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(aws.Config)
	}

	return r0
}

// GetLogger provides a mock function with no fields
func (_m *Factory) GetLogger() Logger {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetLogger")
	}

	var r0 Logger
	if rf, ok := ret.Get(0).(func() Logger); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(Logger)
		}
	}

	return r0
}

// NewFactory creates a new instance of Factory. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewFactory(t interface {
	mock.TestingT
	Cleanup(func())
}) *Factory {
	mock := &Factory{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
