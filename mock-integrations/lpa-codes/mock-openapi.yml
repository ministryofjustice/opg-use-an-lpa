---
openapi: '3.0.2'
info:
  title: lpa-codes-${environment}
  version: '1.0'
servers:
  - url: /v1
    description: we use the path only so we can use in different contexts

x-amazon-apigateway-request-validators:
  all:
    validateRequestParameters: true
    validateRequestBody: true

x-amazon-apigateway-gateway-responses:
  ACCESS_DENIED:
      responseTemplates:
        application/json: '{"errors": { "id": "$context.requestId", "code": "OPGDATA-API-FORBIDDEN", "title":$context.error.messageString, "detail":"Forbidden - The current user is forbidden from accessing this data (in this way)", "meta": {"x-ray": "$context.xrayTraceId"} }}'
  API_CONFIGURATION_ERROR:
      responseTemplates:
        application/json: '{"errors": { "id": "$context.requestId", "code": "OPGDATA-API-API_CONFIGURATION_ERROR", "title":$context.error.messageString, "detail": "", "meta": {"x-ray": "$context.xrayTraceId"} }}'
  AUTHORIZER_CONFIGURATION_ERROR:
      responseTemplates:
        application/json: '{"errors": { "id": "$context.requestId", "code": "OPGDATA-API-AUTHORIZER_CONFIGURATION_ERROR", "title":$context.error.messageString, "detail": "", "meta": {"x-ray": "$context.xrayTraceId"} }}'
  AUTHORIZER_FAILURE:
      responseTemplates:
        application/json: '{"errors": { "id": "$context.requestId", "code": "OPGDATA-API-AUTHORIZER_FAILURE", "title":$context.error.messageString, "detail": "", "meta": {"x-ray": "$context.xrayTraceId"} }}'
  BAD_REQUEST_BODY:
      responseTemplates:
        application/json: '{"errors": [{ "id": "$context.requestId", "code": "OPGDATA-API-INVALIDREQUEST", "title":$context.error.messageString, "detail":"$context.error.validationErrorString", "meta": {"x-ray": "$context.xrayTraceId"} }]}'
  BAD_REQUEST_PARAMETERS:
      responseTemplates:
        application/json: '{"errors": { "id": "$context.requestId", "code": "OPGDATA-API-BAD_REQUEST_PARAMETERS", "title":$context.error.messageString, "detail": "", "meta": {"x-ray": "$context.xrayTraceId"} }}'
  DEFAULT_4XX:
      responseTemplates:
        application/json: '{"errors": { "id": "$context.requestId", "code": "OPGDATA-API-INVALIDREQUEST", "title":$context.error.messageString, "detail": "", "meta": {"x-ray": "$context.xrayTraceId"} }}'
  DEFAULT_5XX:
      responseTemplates:
        application/json: '{"errors": { "id": "$context.requestId", "code": "OPGDATA-API-SERVERERROR", "title":$context.error.messageString, "detail":"Something unexpected happened internally", "meta": {"x-ray": "$context.xrayTraceId"} }}'
  EXPIRED_TOKEN:
      responseTemplates:
        application/json: '{"errors": { "id": "$context.requestId", "code": "OPGDATA-API-EXPIRED_TOKEN", "title":$context.error.messageString, "detail": "", "meta": {"x-ray": "$context.xrayTraceId"} }}'
  INTEGRATION_FAILURE:
      responseTemplates:
        application/json: '{"errors": { "id": "$context.requestId", "code": "OPGDATA-API-INTEGRATION_FAILURE", "title":$context.error.messageString, "detail": "", "meta": {"x-ray": "$context.xrayTraceId"} }}'
  INTEGRATION_TIMEOUT:
      responseTemplates:
        application/json: '{"errors": { "id": "$context.requestId", "code": "OPGDATA-API-INTEGRATION_TIMEOUT", "title":$context.error.messageString, "detail": "", "meta": {"x-ray": "$context.xrayTraceId"} }}'
  INVALID_API_KEY:
      responseTemplates:
        application/json: '{"errors": { "id": "$context.requestId", "code": "OPGDATA-API-INVALID_API_KEY", "title":$context.error.messageString, "detail": "", "meta": {"x-ray": "$context.xrayTraceId"} }}'
  INVALID_SIGNATURE:
      responseTemplates:
        application/json: '{"errors": { "id": "$context.requestId", "code": "OPGDATA-API-INVALID_SIGNATURE", "title":$context.error.messageString, "detail": "", "meta": {"x-ray": "$context.xrayTraceId"} }}'
  MISSING_AUTHENTICATION_TOKEN:
      responseTemplates:
        application/json: '{"errors": { "id": "$context.requestId", "code": "OPGDATA-API-MISSING_AUTHENTICATION_TOKEN", "title":$context.error.messageString, "detail": "", "meta": {"x-ray": "$context.xrayTraceId"} }}'
  QUOTA_EXCEEDED:
      responseTemplates:
        application/json: '{"errors": { "id": "$context.requestId", "code": "OPGDATA-API-QUOTA_EXCEEDED", "title":$context.error.messageString, "detail": "", "meta": {"x-ray": "$context.xrayTraceId"} }}'
  REQUEST_TOO_LARGE:
      responseTemplates:
        application/json: '{"errors": { "id": "$context.requestId", "code": "OPGDATA-API-FILESIZELIMIT", "title":$context.error.messageString, "detail":"Payload too large, try and upload in smaller chunks", "meta": {"x-ray": "$context.xrayTraceId"} }}'
  RESOURCE_NOT_FOUND:
      responseTemplates:
        application/json: '{"errors": { "id": "$context.requestId", "code": "OPGDATA-API-NOTFOUND", "title":$context.error.messageString, "detail":"That URL is not a valid route, or the item resource does not exist", "meta": {"x-ray": "$context.xrayTraceId"} }}'
  THROTTLED:
      responseTemplates:
        application/json: '{"errors": { "id": "$context.requestId", "code": "OPGDATA-API-THROTTLED", "title":$context.error.messageString, "detail": "", "meta": {"x-ray": "$context.xrayTraceId"} }}'
  UNAUTHORIZED:
      responseTemplates:
        application/json: '{"errors": { "id": "$context.requestId", "code": "OPGDATA-API-UNAUTHORISED", "title":$context.error.messageString, "detail":"Unauthorised (no current user and there should be)", "meta": {"x-ray": "$context.xrayTraceId"} }}'
  UNSUPPORTED_MEDIA_TYPE:
      responseTemplates:
        application/json: '{"errors": { "id": "$context.requestId", "code": "OPGDATA-API-MEDIA", "title":$context.error.messageString, "detail":"Unsupported media type for this endpoint", "meta": {"x-ray": "$context.xrayTraceId"} }}'
  WAF_FILTERED:
      responseTemplates:
        application/json: '{"errors": { "id": "$context.requestId", "code": "OPGDATA-API-WAF_FILTERED", "title":$context.error.messageString, "detail": "", "meta": {"x-ray": "$context.xrayTraceId"} }}'

paths:
  /healthcheck:
    get:
      summary: "Healthcheck endpoint"
      description: "Checks health of our lambda"
      operationId: api.resources.handle_healthcheck
      security:
        - sigv4: []
      x-amazon-apigateway-request-validator: "all"
      x-amazon-apigateway-integration:
        uri: arn:aws:apigateway:${region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${region}:${account_id}:function:$${stageVariables.lpa_codes_function_name}/invocations
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
      responses:
        200:
          description: OK
  /create:
    post:
      x-amazon-apigateway-request-validator: "all"
      summary: "Create a new code"
      description: "Create a new 12 digit alpha-numeric code unique to this LPA and Actor"
      operationId: api.resources.create_route
      security:
        - sigv4: []
      x-amazon-apigateway-integration:
        uri: arn:aws:apigateway:${region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${region}:${account_id}:function:$${stageVariables.lpa_codes_function_name}/invocations
        responses:
          default:
            statusCode: "201"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                lpas:
                  type: array
                  items:
                    type: object
                    properties:
                      lpa:
                        type: string
                        pattern: '^([0-9]{12}|([a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12})|(M(-[0-9A-Z]{4}){3}))$'
                      actor:
                        type: string
                        pattern: '[0-9]{12}|^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
                      dob:
                        type: string
                        format: date
                        pattern: '[0-9]{4}-[0-9]{2}-[0-9]{2}$'
              additionalProperties: false
              example:
                  lpas:
                    - lpa: "eed4f597-fd87-4536-99d0-895778824861"
                      actor: "12ad81a9-f89d-4804-99f5-7c0c8669ac9b"
                      dob: "1960-06-05"
                    - lpa: "eed4f597-fd87-4536-99d0-895778824861"
                      actor: "9a619d46-8712-4bfb-a49f-c14914ff319d"
                      dob: "1983-08-20"
      responses:
        201:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CodeCreated'
        400:
          description: Generic bad request (generally invalid syntax)
          content:
            application/vnd.opg-data.v1+json:
              schema:
                $ref: '#/components/schemas/Error400'
        401:
          description: Unauthorised (no current user and there should be)
          content:
            application/vnd.opg-data.v1+json:
              schema:
                $ref: '#/components/schemas/Error401'
        403:
          description: Forbidden - The current user is forbidden from accessing this data (in this way)
          content:
            application/vnd.opg-data.v1+json:
              schema:
                $ref: '#/components/schemas/Error403'
        404:
          description: That URL is not a valid route, or the item resource does not exist
          content:
            application/vnd.opg-data.v1+json:
              schema:
                $ref: '#/components/schemas/Error404'
        413:
          description: Payload too large
          content:
            application/vnd.opg-data.v1+json:
              schema:
                $ref: '#/components/schemas/Error413'
        415:
          description: Unsupported media type
          content:
            application/vnd.opg-data.v1+json:
              schema:
                $ref: '#/components/schemas/Error415'
        500:
          description: Something unexpected happened and it is the API"s fault
          content:
            application/vnd.opg-data.v1+json:
              schema:
                $ref: '#/components/schemas/Error500'
        503:
          description: Service Unavailable - please try again later
          content:
            application/vnd.opg-data.v1+json:
              schema:
                $ref: '#/components/schemas/Error503'
  /validate:
    post:
      summary: "Validate a code"
      description: "Validate a code"
      operationId: api.resources.validate_route
      security:
        - sigv4: []
      x-amazon-apigateway-request-validator: "all"
      x-amazon-apigateway-integration:
        uri: arn:aws:apigateway:${region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${region}:${account_id}:function:$${stageVariables.lpa_codes_function_name}/invocations
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                lpa:
                  type: string
                dob:
                  type: string
                  format: date
                code:
                  type: string
              example:
                lpa: "eed4f597-fd87-4536-99d0-895778824861"
                dob: "1960-06-05"
                code: "YsSu4iAztUXm"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateCode'
        400:
          description: Generic bad request (generally invalid syntax)
          content:
            application/vnd.opg-data.v1+json:
              schema:
                $ref: '#/components/schemas/Error400'
        401:
          description: Unauthorised (no current user and there should be)
          content:
            application/vnd.opg-data.v1+json:
              schema:
                $ref: '#/components/schemas/Error401'
        403:
          description: Forbidden - The current user is forbidden from accessing this data (in this way)
          content:
            application/vnd.opg-data.v1+json:
              schema:
                $ref: '#/components/schemas/Error403'
        404:
          description: That URL is not a valid route, or the item resource does not exist
          content:
            application/vnd.opg-data.v1+json:
              schema:
                $ref: '#/components/schemas/Error404'
        413:
          description: Payload too large
          content:
            application/vnd.opg-data.v1+json:
              schema:
                $ref: '#/components/schemas/Error413'
        415:
          description: Unsupported media type
          content:
            application/vnd.opg-data.v1+json:
              schema:
                $ref: '#/components/schemas/Error415'
        500:
          description: Something unexpected happened and it is the API"s fault
          content:
            application/vnd.opg-data.v1+json:
              schema:
                $ref: '#/components/schemas/Error500'
        503:
          description: Service Unavailable - please try again later
          content:
            application/vnd.opg-data.v1+json:
              schema:
                $ref: '#/components/schemas/Error503'
  /revoke:
    post:
      summary: "Revoke a code"
      description: "Revoke a code"
      operationId: api.resources.revoke_route
      security:
        - sigv4: []
      x-amazon-apigateway-request-validator: "all"
      x-amazon-apigateway-integration:
        uri: arn:aws:apigateway:${region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${region}:${account_id}:function:$${stageVariables.lpa_codes_function_name}/invocations
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
              example:
                code: "YsSu4iAztUXm"
      responses:
        200:
          description: OK
        400:
          description: Generic bad request (generally invalid syntax)
          content:
            application/vnd.opg-data.v1+json:
              schema:
                $ref: '#/components/schemas/Error400'
        401:
          description: Unauthorised (no current user and there should be)
          content:
            application/vnd.opg-data.v1+json:
              schema:
                $ref: '#/components/schemas/Error401'
        403:
          description: Forbidden - The current user is forbidden from accessing this data (in this way)
          content:
            application/vnd.opg-data.v1+json:
              schema:
                $ref: '#/components/schemas/Error403'
        404:
          description: That URL is not a valid route, or the item resource does not exist
          content:
            application/vnd.opg-data.v1+json:
              schema:
                $ref: '#/components/schemas/Error404'
        413:
          description: Payload too large
          content:
            application/vnd.opg-data.v1+json:
              schema:
                $ref: '#/components/schemas/Error413'
        415:
          description: Unsupported media type
          content:
            application/vnd.opg-data.v1+json:
              schema:
                $ref: '#/components/schemas/Error415'
        500:
          description: Something unexpected happened and it is the API"s fault
          content:
            application/vnd.opg-data.v1+json:
              schema:
                $ref: '#/components/schemas/Error500'
        503:
          description: Service Unavailable - please try again later
          content:
            application/vnd.opg-data.v1+json:
              schema:
                $ref: '#/components/schemas/Error503'
  /mark_used:
    post:
      summary: "Mark a Modernise code as used - set the expiry date from now"
      description: "Mark a Modernise code as used - set the expiry date from nowe"
      operationId: api.resources.mark_used_route
      security:
        - sigv4: []
      x-amazon-apigateway-request-validator: "all"
      x-amazon-apigateway-integration:
        uri: arn:aws:apigateway:${region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${region}:${account_id}:function:$${stageVariables.lpa_codes_function_name}/invocations
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
              example:
                code: "YsSu4iAztUXm"
      responses:
        200:
          description: OK
        400:
          description: Generic bad request (generally invalid syntax)
          content:
            application/vnd.opg-data.v1+json:
              schema:
                $ref: '#/components/schemas/Error400'
        401:
          description: Unauthorised (no current user and there should be)
          content:
            application/vnd.opg-data.v1+json:
              schema:
                $ref: '#/components/schemas/Error401'
        403:
          description: Forbidden - The current user is forbidden from accessing this data (in this way)
          content:
            application/vnd.opg-data.v1+json:
              schema:
                $ref: '#/components/schemas/Error403'
        404:
          description: That URL is not a valid route, or the item resource does not exist
          content:
            application/vnd.opg-data.v1+json:
              schema:
                $ref: '#/components/schemas/Error404'
        413:
          description: Payload too large
          content:
            application/vnd.opg-data.v1+json:
              schema:
                $ref: '#/components/schemas/Error413'
        415:
          description: Unsupported media type
          content:
            application/vnd.opg-data.v1+json:
              schema:
                $ref: '#/components/schemas/Error415'
        500:
          description: Something unexpected happened and it is the API"s fault
          content:
            application/vnd.opg-data.v1+json:
              schema:
                $ref: '#/components/schemas/Error500'
        503:
          description: Service Unavailable - please try again later
          content:
            application/vnd.opg-data.v1+json:
              schema:
                $ref: '#/components/schemas/Error503'
  /exists:
    post:
      summary: "Checks if a code exists for a specific actor on an LPA"
      description: "Checks if a code exists for a specific actor on an LPA"
      operationId: api.resources.actor_code_exists_route
      security:
        - sigv4: []
      x-amazon-apigateway-request-validator: "all"
      x-amazon-apigateway-integration:
        uri: arn:aws:apigateway:${region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${region}:${account_id}:function:$${stageVariables.lpa_codes_function_name}/invocations
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                lpa:
                  type: string
                actor:
                  type: string
              example:
                lpa: "eed4f597-fd87-4536-99d0-895778824861"
                actor: "12ad81a9-f89d-4804-99f5-7c0c8669ac9b"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActorCodeExists'
        400:
          description: Generic bad request (generally invalid syntax)
          content:
            application/vnd.opg-data.v1+json:
              schema:
                $ref: '#/components/schemas/Error400'
        401:
          description: Unauthorised (no current user and there should be)
          content:
            application/vnd.opg-data.v1+json:
              schema:
                $ref: '#/components/schemas/Error401'
        403:
          description: Forbidden - The current user is forbidden from accessing this data (in this way)
          content:
            application/vnd.opg-data.v1+json:
              schema:
                $ref: '#/components/schemas/Error403'
        404:
          description: That URL is not a valid route, or the item resource does not exist
          content:
            application/vnd.opg-data.v1+json:
              schema:
                $ref: '#/components/schemas/Error404'
        413:
          description: Payload too large
          content:
            application/vnd.opg-data.v1+json:
              schema:
                $ref: '#/components/schemas/Error413'
        415:
          description: Unsupported media type
          content:
            application/vnd.opg-data.v1+json:
              schema:
                $ref: '#/components/schemas/Error415'
        500:
          description: Something unexpected happened and it is the API"s fault
          content:
            application/vnd.opg-data.v1+json:
              schema:
                $ref: '#/components/schemas/Error500'
        503:
          description: Service Unavailable - please try again later
          content:
            application/vnd.opg-data.v1+json:
              schema:
                $ref: '#/components/schemas/Error503'
  /code:
    post:
      summary: "Returns all details for a code"
      description: "Returns all details for a code"
      operationId: api.resources.actor_code_details_route
      security:
        - sigv4: []
      x-amazon-apigateway-request-validator: "all"
      x-amazon-apigateway-integration:
        uri: arn:aws:apigateway:${region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${region}:${account_id}:function:$${stageVariables.lpa_codes_function_name}/invocations
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
              example:
                code: "YsSu4iAztUXm"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CodeDetails'
        400:
          description: Generic bad request (generally invalid syntax)
          content:
            application/vnd.opg-data.v1+json:
              schema:
                $ref: '#/components/schemas/Error400'
        401:
          description: Unauthorised (no current user and there should be)
          content:
            application/vnd.opg-data.v1+json:
              schema:
                $ref: '#/components/schemas/Error401'
        403:
          description: Forbidden - The current user is forbidden from accessing this data (in this way)
          content:
            application/vnd.opg-data.v1+json:
              schema:
                $ref: '#/components/schemas/Error403'
        404:
          description: That URL is not a valid route, or the item resource does not exist
          content:
            application/vnd.opg-data.v1+json:
              schema:
                $ref: '#/components/schemas/Error404'
        413:
          description: Payload too large
          content:
            application/vnd.opg-data.v1+json:
              schema:
                $ref: '#/components/schemas/Error413'
        415:
          description: Unsupported media type
          content:
            application/vnd.opg-data.v1+json:
              schema:
                $ref: '#/components/schemas/Error415'
        500:
          description: Something unexpected happened and it is the API"s fault
          content:
            application/vnd.opg-data.v1+json:
              schema:
                $ref: '#/components/schemas/Error500'
        503:
          description: Service Unavailable - please try again later
          content:
            application/vnd.opg-data.v1+json:
              schema:
                $ref: '#/components/schemas/Error503'

components:
  securitySchemes:
    sigv4:
      type: apiKey
      name: Authorization
      in: header
      x-amazon-apigateway-authtype: awsSigv4
      x-apikeyInfoFunc: lpa_codes_mock.apikey_auth
  schemas:
    CodeCreated:
      properties:
        codes:
          type: array
          items:
            type: object
            properties:
              lpa:
                type: string
              actor:
                type: string
              code:
                type: string
      example:
        codes:
        - lpa: "eed4f597-fd87-4536-99d0-895778824861"
          actor: "12ad81a9-f89d-4804-99f5-7c0c8669ac9b"
          code: "YsSu4iAztUXm"
        - lpa: "eed4f597-fd87-4536-99d0-895778824861"
          actor: "9a619d46-8712-4bfb-a49f-c14914ff319d"
          code: "aEYVS6i9zSwy"
      required:
        - codes
    ValidateCode:
      properties:
        actor:
          type: string
      example:
        actor: "12ad81a9-f89d-4804-99f5-7c0c8669ac9b"
      required:
        - actor
    ActorCodeExists:
      properties:
        lpa:
          type: string
        actor:
          type: string
      example:
        lpa: "eed4f597-fd87-4536-99d0-895778824861"
        actor: "12ad81a9-f89d-4804-99f5-7c0c8669ac9b"
      required:
        - lpa
        - actor
    CodeDetails:
      properties:
        active:
          type: boolean
        actor:
          type: string
        code:
          type: string
        dob:
          type: string
          format: date
        expiry_date:
          type: string
          format: date
        generated_date:
          type: string
          format: date
        last_updated_date:
          type: string
          format: date
        lpa:
          type: string
        status_details:
          type: string
      example:
        active: true
        code: "YsSu4iAztUXm"
        last_updated_date: 2022-08-20
        status_details: "Generated"
        expiry_date: 2023-08-20
        dob: 1983-08-20
        generated_date: 2022-08-20
        lpa: "eed4f597-fd87-4536-99d0-895778824861"
        actor: "12ad81a9-f89d-4804-99f5-7c0c8669ac9b"
      required:
        - active
        - actor
        - code
        - dob
        - expiry_date
        - generated_date
        - last_updated_date
        - lpa
        - status_details

    Error400:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            type: object
            required:
              - code
              - title
            properties:
              id:
                type: string
                example: "A123BCD"
              code:
                type: string
                example: "OPGDATA-API-INVALIDREQUEST"
              title:
                type: string
                example: "Invalid Request"
              detail:
                type: string
                example: "Invalid request, the data is incorrect"
              meta:
                type: object
                properties:
                  x-ray:
                    type: string
                    example: "93c330d4-7d84-4c1b-8fdb-54cec5bfe747"
    Error401:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            type: object
            required:
              - code
              - title
            properties:
              id:
                type: string
                example: "A123BCD"
              code:
                type: string
                example: "OPGDATA-API-UNAUTHORISED"
              title:
                type: string
                example: "User is not authorised"
              detail:
                type: string
                example: "Unauthorised (no current user and there should be)"
              meta:
                type: object
                properties:
                  x-ray:
                    type: string
                    example: "93c330d4-7d84-4c1b-8fdb-54cec5bfe747"
    Error403:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            type: object
            required:
              - code
              - title
            properties:
              id:
                type: string
                example: "A123BCD"
              code:
                type: string
                example: "OPGDATA-API-FORBIDDEN"
              title:
                type: string
                example: "Access Denied"
              detail:
                type: string
                example: "Forbidden - The current user is forbidden from accessing this data (in this way)"
              meta:
                type: object
                properties:
                  x-ray:
                    type: string
                    example: "93c330d4-7d84-4c1b-8fdb-54cec5bfe747"
    Error404:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            type: object
            required:
              - code
              - title
            properties:
              id:
                type: string
                example: "A123BCD"
              code:
                type: string
                example: "OPGDATA-API-NOTFOUND"
              title:
                type: string
                example: "Page not found"
              detail:
                type: string
                example: "That URL is not a valid route, or the item resource does not exist"
              meta:
                type: object
                properties:
                  x-ray:
                    type: string
                    example: "93c330d4-7d84-4c1b-8fdb-54cec5bfe747"
    Error413:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            type: object
            required:
              - code
              - title
            properties:
              id:
                type: string
                example: "A123BCD"
              code:
                type: string
                example: "OPGDATA-API-FILESIZELIMIT"
              title:
                type: string
                example: "Payload too large"
              detail:
                type: string
                example: "Payload too large, try and upload in smaller chunks"
              meta:
                type: object
                properties:
                  x-ray:
                    type: string
                    example: "93c330d4-7d84-4c1b-8fdb-54cec5bfe747"
    Error415:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            type: object
            required:
              - code
              - title
            properties:
              id:
                type: string
                example: "A123BCD"
              code:
                type: string
                example: "OPGDATA-API-MEDIA"
              title:
                type: string
                example: "Unsupported media type"
              detail:
                type: string
                example: "Unsupported media type for this endpoint"
              meta:
                type: object
                properties:
                  x-ray:
                    type: string
                    example: "93c330d4-7d84-4c1b-8fdb-54cec5bfe747"
    Error500:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            type: object
            required:
              - code
              - title
            properties:
              id:
                type: string
                example: "A123BCD"
              code:
                type: string
                example: "OPGDATA-API-SERVERERROR"
              title:
                type: string
                example: "Internal server error"
              detail:
                type: string
                example: "Something unexpected happened internally"
              meta:
                type: object
                properties:
                  x-ray:
                    type: string
                    example: "93c330d4-7d84-4c1b-8fdb-54cec5bfe747"
    Error503:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            type: object
            required:
              - code
              - title
            properties:
              id:
                type: string
                example: "A123BCD"
              code:
                type: string
                example: "OPGDATA-API-UNAVAILABLE"
              title:
                type: string
                example: "Service Unavailable"
              detail:
                type: string
                example: "Service is currently unavailable. Please try again later"
              meta:
                type: object
                properties:
                  x-ray:
                    type: string
                    example: "93c330d4-7d84-4c1b-8fdb-54cec5bfe747"
