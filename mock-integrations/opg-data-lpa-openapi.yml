openapi: '3.0.2'
info:
  title: lpa-${environment}
  version: '1.0'
  description: 'Rest API for LPA Data - ${environment}'
servers:
  - url: /v1
    description: we use the path only so we can use in different contexts

x-amazon-apigateway-request-validators:
  all:
    validateRequestParameters: true
    validateRequestBody: true

x-amazon-apigateway-gateway-responses:
  ACCESS_DENIED:
    responseTemplates:
      application/json: '{"errors": { "id": "$context.requestId", "code": "OPGDATA-API-FORBIDDEN", "title":$context.error.messageString, "detail":"Forbidden - The current user is forbidden from accessing this data (in this way)", "meta": {"x-ray": "$context.xrayTraceId"} }}'
  API_CONFIGURATION_ERROR:
    responseTemplates:
      application/json: '{"errors": { "id": "$context.requestId", "code": "OPGDATA-API-API_CONFIGURATION_ERROR", "title":$context.error.messageString, "detail": "", "meta": {"x-ray": "$context.xrayTraceId"} }}'
  AUTHORIZER_CONFIGURATION_ERROR:
    responseTemplates:
      application/json: '{"errors": { "id": "$context.requestId", "code": "OPGDATA-API-AUTHORIZER_CONFIGURATION_ERROR", "title":$context.error.messageString, "detail": "", "meta": {"x-ray": "$context.xrayTraceId"} }}'
  AUTHORIZER_FAILURE:
    responseTemplates:
      application/json: '{"errors": { "id": "$context.requestId", "code": "OPGDATA-API-AUTHORIZER_FAILURE", "title":$context.error.messageString, "detail": "", "meta": {"x-ray": "$context.xrayTraceId"} }}'
  BAD_REQUEST_BODY:
    responseTemplates:
      application/json: '{"errors": [{ "id": "$context.requestId", "code": "OPGDATA-API-INVALIDREQUEST", "title":$context.error.messageString, "detail":"$context.error.validationErrorString", "meta": {"x-ray": "$context.xrayTraceId"} }]}'
  BAD_REQUEST_PARAMETERS:
    responseTemplates:
      application/json: '{"errors": { "id": "$context.requestId", "code": "OPGDATA-API-BAD_REQUEST_PARAMETERS", "title":$context.error.messageString, "detail": "", "meta": {"x-ray": "$context.xrayTraceId"} }}'
  DEFAULT_4XX:
    responseTemplates:
      application/json: '{"errors": { "id": "$context.requestId", "code": "OPGDATA-API-INVALIDREQUEST", "title":$context.error.messageString, "detail": "", "meta": {"x-ray": "$context.xrayTraceId"} }}'
  DEFAULT_5XX:
    responseTemplates:
      application/json: '{"errors": { "id": "$context.requestId", "code": "OPGDATA-API-SERVERERROR", "title":$context.error.messageString, "detail":"Something unexpected happened internally", "meta": {"x-ray": "$context.xrayTraceId"} }}'
  EXPIRED_TOKEN:
    responseTemplates:
      application/json: '{"errors": { "id": "$context.requestId", "code": "OPGDATA-API-EXPIRED_TOKEN", "title":$context.error.messageString, "detail": "", "meta": {"x-ray": "$context.xrayTraceId"} }}'
  INTEGRATION_FAILURE:
    responseTemplates:
      application/json: '{"errors": { "id": "$context.requestId", "code": "OPGDATA-API-INTEGRATION_FAILURE", "title":$context.error.messageString, "detail": "", "meta": {"x-ray": "$context.xrayTraceId"} }}'
  INTEGRATION_TIMEOUT:
    responseTemplates:
      application/json: '{"errors": { "id": "$context.requestId", "code": "OPGDATA-API-INTEGRATION_TIMEOUT", "title":$context.error.messageString, "detail": "", "meta": {"x-ray": "$context.xrayTraceId"} }}'
  INVALID_API_KEY:
    responseTemplates:
      application/json: '{"errors": { "id": "$context.requestId", "code": "OPGDATA-API-INVALID_API_KEY", "title":$context.error.messageString, "detail": "", "meta": {"x-ray": "$context.xrayTraceId"} }}'
  INVALID_SIGNATURE:
    responseTemplates:
      application/json: '{"errors": { "id": "$context.requestId", "code": "OPGDATA-API-INVALID_SIGNATURE", "title":$context.error.messageString, "detail": "", "meta": {"x-ray": "$context.xrayTraceId"} }}'
  MISSING_AUTHENTICATION_TOKEN:
    responseTemplates:
      application/json: '{"errors": { "id": "$context.requestId", "code": "OPGDATA-API-MISSING_AUTHENTICATION_TOKEN", "title":$context.error.messageString, "detail": "", "meta": {"x-ray": "$context.xrayTraceId"} }}'
  QUOTA_EXCEEDED:
    responseTemplates:
      application/json: '{"errors": { "id": "$context.requestId", "code": "OPGDATA-API-QUOTA_EXCEEDED", "title":$context.error.messageString, "detail": "", "meta": {"x-ray": "$context.xrayTraceId"} }}'
  REQUEST_TOO_LARGE:
    responseTemplates:
      application/json: '{"errors": { "id": "$context.requestId", "code": "OPGDATA-API-FILESIZELIMIT", "title":$context.error.messageString, "detail":"Payload too large, try and upload in smaller chunks", "meta": {"x-ray": "$context.xrayTraceId"} }}'
  RESOURCE_NOT_FOUND:
    responseTemplates:
      application/json: '{"errors": { "id": "$context.requestId", "code": "OPGDATA-API-NOTFOUND", "title":$context.error.messageString, "detail":"That URL is not a valid route, or the item resource does not exist", "meta": {"x-ray": "$context.xrayTraceId"} }}'
  THROTTLED:
    responseTemplates:
      application/json: '{"errors": { "id": "$context.requestId", "code": "OPGDATA-API-THROTTLED", "title":$context.error.messageString, "detail": "", "meta": {"x-ray": "$context.xrayTraceId"} }}'
  UNAUTHORIZED:
    responseTemplates:
      application/json: '{"errors": { "id": "$context.requestId", "code": "OPGDATA-API-UNAUTHORISED", "title":$context.error.messageString, "detail":"Unauthorised (no current user and there should be)", "meta": {"x-ray": "$context.xrayTraceId"} }}'
  UNSUPPORTED_MEDIA_TYPE:
    responseTemplates:
      application/json: '{"errors": { "id": "$context.requestId", "code": "OPGDATA-API-MEDIA", "title":$context.error.messageString, "detail":"Unsupported media type for this endpoint", "meta": {"x-ray": "$context.xrayTraceId"} }}'
  WAF_FILTERED:
    responseTemplates:
      application/json: '{"errors": { "id": "$context.requestId", "code": "OPGDATA-API-WAF_FILTERED", "title":$context.error.messageString, "detail": "", "meta": {"x-ray": "$context.xrayTraceId"} }}'

"x-amazon-apigateway-policy": {
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Allow",
            "Principal": {
              "AWS": []
            },
            "Action": "execute-api:Invoke",
            "Resource": [
                "arn:aws:execute-api:eu-west-1:${account_id}:*/*/*/*"
            ]
        }
    ]
}

paths:
  /healthcheck:
    description: opg-data-lpa healthcheck
    get:
      summary: opg-data-lpa healthcheck
      description: Check if required services are available
      operationId: app.healthcheck
      tags:
        - "opg-data-lpa"
      security:
        - sigv4: []
      x-amazon-apigateway-request-validator: "all"
      x-amazon-apigateway-integration:
        uri: arn:aws:apigateway:${region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${region}:${account_id}:function:$${stageVariables.flask_app_name}/invocations
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
      responses:
        200:
          description: opg-data-lpa healthcheck
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Healthcheck'
                  meta:
                    type: object
        400:
          description: Generic bad request (generally invalid syntax)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
        401:
          description: Unauthorised (no current user and there should be)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
        403:
          description: Forbidden - The current user is forbidden from accessing this data (in this way)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error403'
        404:
          description: That URL is not a valid route, or the item resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
        500:
          description: Something unexpected happened and it is the API"s fault
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
        503:
          description: Service Unavailable - please try again later
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error503'

  /lpa-online-tool/lpas/{lpa_online_tool_id}:
    get:
      security:
        - sigv4: []
      x-amazon-apigateway-request-validator: "all"
      x-amazon-apigateway-integration:
        uri: arn:aws:apigateway:${region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${region}:${account_id}:function:$${stageVariables.flask_app_name}/invocations
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
      parameters:
        - in: path
          name: lpa_online_tool_id
          schema:
            type: string
            pattern: '^A\d{11}$'
          required: true
          description: Online Tool ID
          example: A12345678987
      responses:
        '200':
          description: LPA details returned for the requested ID
          headers:
            Age:
              schema:
                type: integer
              description: |
                The time elapsed, measured in seconds, since the returned response body was retrieved from Sirius.
                Under normal circumstances this will be zero (0), indicating the response represents the current 'live' state within Sirius.
                In the case that the Gateway was unable to retrieve an up to date response from Sirius, it will make best efforts to return a cached version.
                It's up to the consumer of the API to determine if they wish to use a response based on its age.
          content:
            application/json:
              schema:
                type: object
                required:
                  - cancellationDate
                  - invalidDate
                  - onlineLpaId
                  - receiptDate
                  - registrationDate
                  - rejectedDate
                  - status
                  - statusDate
                  - withdrawnDate
                  - dispatchDate
                properties:
                  cancellationDate:
                    type: string
                    format: date
                    nullable: true
                    description: The date the LPA was registered
                    example: '2018-06-30'
                  invalidDate:
                    type: string
                    format: date
                    nullable: true
                    description: The date the LPA was registered
                    example: '2018-06-30'
                  onlineLpaId:
                    type: string
                    example: A22486562341
                    pattern: '^A\d{11}$'
                  receiptDate:
                    type: string
                    format: date
                    description: The date the LPA was created
                    example: '2018-06-30'
                  rejectedDate:
                    type: string
                    format: date
                    nullable: true
                    description: The date the LPA was rejected
                    example: '2018-06-30'
                  registrationDate:
                    type: string
                    format: date
                    nullable: true
                    description: The date the LPA was registered
                    example: '2018-06-30'
                  statusDate:
                    type: string
                    format: date
                    nullable: true
                    description: The date the LPA's status was last changed
                    example: '2018-06-30'
                  withdrawnDate:
                    type: string
                    format: date
                    nullable: true
                    description: The date the LPA was withdrawn
                    example: '2018-06-30'
                  dispatchDate:
                    type: string
                    format: date
                    nullable: true
                    description: The date the LPA was dispatched
                    example: '2018-06-30'
                  status:
                    type: string
                    enum: [Cancelled, Imperfect, Invalid, Pending, Perfect, Rejected, Revoked, Withdrawn, Registered, Payment Pending, Return - unpaid]
        '404':
          description: An LPA with the passed ID Not Found
        '400':
          description: Bad request
        '403':
          description: Authentication failed
        '410':
          description: An LPA with the passed ID has been deleted from The Sirius data provider
        '429':
          description: API Gateway throttling limit exceeded
        '500':
          description: Unhandeled internal exception within OPG Gateway
        '502':
          description: The Sirius data provider returned an exception
        '504':
          description: The Sirius data provider timed out
  /use-an-lpa/lpas/{uid}:
    get:
      tags:
        - "use-a-lpa"
      security:
        - sigv4: []
      x-amazon-apigateway-request-validator: "all"
      x-amazon-apigateway-integration:
        uri: arn:aws:apigateway:${region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${region}:${account_id}:function:$${stageVariables.flask_app_name}/invocations
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
      parameters:
        - in: path
          name: uid
          schema:
            type: string
            pattern: '(^7\d{11}$)'
          required: true
          description: Reference Number representing an LPA Uid
          examples:
            lpauid: 700000000054
      responses:
        '200':
          description: LPA details returned for the requested ID
          headers:
            Age:
              schema:
                type: integer
              description: |
                The time elapsed, measured in seconds, since the returned response body was retrieved from Sirius.
                Under normal circumstances this will be zero (0), indicating the response represents the current 'live' state within Sirius.
                In the case that the Gateway was unable to retrieve an up to date response from Sirius, it will make best efforts to return a cached version.
                It's up to the consumer of the API to determine if they wish to use a response based on its age.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lpa'
        '404':
          description: An LPA with the passed ID Not Found
        '400':
          description: Bad request
        '403':
          description: Authentication failed
        '410':
          description: An LPA with the passed ID has been deleted from The Sirius data provider
        '429':
          description: API Gateway throttling limit exceeded
        '500':
          description: Unhandeled internal exception within OPG Gateway
        '502':
          description: The Sirius data provider returned an exception
        '504':
          description: The Sirius data provider timed out
  /use-an-lpa/lpas/requestCode:
    post:
      tags:
        - "use-a-lpa"
      security:
        - sigv4: []
      x-amazon-apigateway-request-validator: "all"
      x-amazon-apigateway-integration:
        uri: arn:aws:apigateway:${region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${region}:${account_id}:function:$${stageVariables.flask_app_name}/invocations
        responses:
          default:
            statusCode: "204"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: "#/components/schemas/LetterRequest"
                - $ref: "#/components/schemas/LetterRequestWithCleanse"
            examples:
              request:
                summary: as letter request
                value:
                  case_uid: 700000000000
                  actor_uid: 700000000000
              cleanse:
                summary: as cleanse request
                value:
                  case_uid: 700000000000
                  notes: "Name: Example\nPostcode: EX4 MPL\nEmail: example@example.org"
      responses:
        '200':
          description: Letter was successfully enqueued or cleanse process started
          schema:
            type: object
            required:
              - queuedForCleansing
            properties:
              queuedForCleansing:
                type: boolean
                description: Whether the request was queued for cleansing
        '204':
          description: Letter was successfully enqueued
        '400':
          description: Invalid request
        '500':
          description: Unexpected error

components:
  securitySchemes:
    sigv4:
      type: "apiKey"
      name: "Authorization"
      in: "header"
      x-amazon-apigateway-authtype: "awsSigv4"
  schemas:
    Healthcheck:
      type: object
      properties:
        api-status:
          type: string
          example: "OK"
        sirius-status:
          type: string
          example: "OK"
        cache-status:
          type: string
          example: "OK"
    LetterRequest:
      type: object
      required:
        - case_uid
        - actor_uid
      properties:
        actor_uid:
          type: integer
        case_uid:
          type: integer
    LetterRequestWithCleanse:
      type: object
      required:
        - case_uid
        - notes
      properties:
        notes:
          type: string
          maxLength: 1000
        case_uid:
          type: integer
    Error400:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            type: object
            required:
              - code
              - title
            properties:
              id:
                type: string
                example: "A123BCD"
              code:
                type: string
                example: "OPGDATA-API-INVALIDREQUEST"
              title:
                type: string
                example: "Invalid Request"
              detail:
                type: string
                example: "Invalid request, the data is incorrect"
              meta:
                type: object
                properties:
                  x-ray:
                    type: string
                    example: "93c330d4-7d84-4c1b-8fdb-54cec5bfe747"
    Lpa:
      type: object
      required:
        - id
        - uId
        - applicationType
        - caseSubtype
        - receiptDate
        - rejectedDate
        - registrationDate
        - cancellationDate
        - invalidDate
        - withdrawnDate
        - dispatchDate
        - status
        - caseAttorneySingular
        - caseAttorneyJointlyAndSeverally
        - caseAttorneyJointly
        - caseAttorneyJointlyAndJointlyAndSeverally
        - applicationHasRestrictions
        - applicationHasGuidance
        - lpaDonorSignatureDate
        - lpaIsCleansed
        - lifeSustainingTreatment
        - onlineLpaId
        - attorneyActDecisions
        - donor
        - attorneys
        - replacementAttorneys
        - certificateProviders
        - trustCorporations
      properties:
        id:
          type: integer
        uId:
          type: string
          example: '7000-0000-0054'
          description: e.g. 7000-0000-0054
        applicationType:
          type: string
          enum: [Online, Classic]
        caseSubtype:
          type: string
          enum: [hw, pfa]
          minLength: 1
          maxLength: 3
        receiptDate:
          type: string
          format: date
          description: The date the LPA was created
          nullable: true
          example: '2018-06-30'
        rejectedDate:
          type: string
          format: date
          description: The date the LPA was rejected
          nullable: true
          example: '2018-06-30'
        registrationDate:
          type: string
          format: date
          description: The date the LPA was registered
          nullable: true
          example: '2018-06-30'
        cancellationDate:
          type: string
          format: date
          description: The date the LPA was cancelled
          nullable: true
          example: '2018-06-30'
        invalidDate:
          type: string
          format: date
          description: The date the LPA was marked invalid
          nullable: true
          example: '2018-06-30'
        withdrawnDate:
          type: string
          format: date
          description: The date the LPA was withdrawn
          nullable: true
          example: '2018-06-30'
        dispatchDate:
          type: string
          format: date
          description: The date the LPA was dispatched
          nullable: true
          example: '2018-06-30'
        status:
          type: string
          enum: [Cancelled, Imperfect, Invalid, Pending, Perfect, Rejected, Revoked, Suspended, With COP, Withdrawn, Registered, Payment Pending]
          minLength: 1
          maxLength: 10
        caseAttorneySingular:
          type: boolean
        caseAttorneyJointlyAndSeverally:
          type: boolean
        caseAttorneyJointly:
          type: boolean
        caseAttorneyJointlyAndJointlyAndSeverally:
          type: boolean
        applicationHasRestrictions:
          type: boolean
        applicationHasGuidance:
          type: boolean
        lpaDonorSignatureDate:
          type: string
          format: date
          example: '2018-06-30'
        lpaIsCleansed:
          type: boolean
        lifeSustainingTreatment:
          type: string
          enum: ['Option A', 'Option B', null]
          nullable: true
        onlineLpaId:
          type: string
          example: ABC123
        attorneyActDecisions:
          type: string
          enum: ['When Registered', 'Loss of capacity', null]
          nullable: true
        donor:
          $ref: '#/components/schemas/Donor'
        attorneys:
          type: array
          items:
            $ref: '#/components/schemas/CaseActor'
        replacementAttorneys:
          type: array
          items:
            $ref: '#/components/schemas/CaseActor'
        trustCorporations:
          type: array
          items:
            $ref: '#/components/schemas/CaseActor'
        certificateProviders:
          type: array
          items:
            $ref: '#/components/schemas/CaseActor'
    Donor:
      allOf:
        - $ref: '#/components/schemas/CaseActor'
        - type: object
          required:
            - linked
          properties:
            linked:
              type: array
              items:
                type: object
                required:
                  - id
                  - uId
                properties:
                  id:
                    type: integer
                    description: The donor's database ID
                  uId:
                    type: string
                    example: '7000-0000-0054'
                    description: The donor's unique ID (e.g. 7000-0000-0054)
    CaseActor:
      type: object
      required:
        - id
        - uId
        - email
        - dob
        - salutation
        - firstname
        - middlenames
        - surname
        - companyName
        - systemStatus
        - addresses
      properties:
        id:
          type: integer
          description: The case actor's database ID
        uId:
          type: string
          example: '7000-0000-0054'
          description: The case actor's unique ID (e.g. 7000-0000-0054)
        email:
          type: string
          description: The case actor's contact email address
          maxLength: 255
        dob:
          type: string
          description: The case actor's date of birth
          example: '1980-10-10'
        salutation:
          type: string
          description: The case actor's salutation
          example: Mrs
        firstname:
          type: string
          description: The case actor's first name
          example: Ian
          maxLength: 255
        middlenames:
          type: string
          description: The case actor's last name
          example: Deputy
          maxLength: 255
        surname:
          type: string
          description: The case actor's last name
          example: Deputy
          maxLength: 255
        companyName:
          type: string
          description: The case actor's company name (if relevant)
          nullable: true
          example: ABC Ltd
          maxLength: 255
        systemStatus:
          type: boolean
          description: The active/inactive status of the case actor
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
    Address:
      required:
        - id
        - town
        - county
        - postcode
        - country
        - type
        - addressLine1
        - addressLine2
        - addressLine3
      properties:
        id:
          type: integer
          description: The address database ID
        town:
          type: string
          description: The town
          maxLength: 255
        county:
          type: string
          description: The county
          maxLength: 255
        postcode:
          type: string
          description: The postcode
          maxLength: 255
        country:
          type: string
          description: Address country
          example: UK
          maxLength: 255
        type:
          type: string
          description: Address type
          example: Primary
          enum: [Primary]
          maxLength: 7
        addressLine1:
          type: string
          description: The first line of the address
          maxLength: 255
        addressLine2:
          type: string
          description: The second line of the address
          maxLength: 255
        addressLine3:
          type: string
          description: The third line of the address
          maxLength: 255
    Error401:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            type: object
            required:
              - code
              - title
            properties:
              id:
                type: string
                example: "A123BCD"
              code:
                type: string
                example: "OPGDATA-API-UNAUTHORISED"
              title:
                type: string
                example: "User is not authorised"
              detail:
                type: string
                example: "Unauthorised (no current user and there should be)"
              meta:
                type: object
                properties:
                  x-ray:
                    type: string
                    example: "93c330d4-7d84-4c1b-8fdb-54cec5bfe747"
    Error403:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            type: object
            required:
              - code
              - title
            properties:
              id:
                type: string
                example: "A123BCD"
              code:
                type: string
                example: "OPGDATA-API-FORBIDDEN"
              title:
                type: string
                example: "Access Denied"
              detail:
                type: string
                example: "Forbidden - The current user is forbidden from accessing this data (in this way)"
              meta:
                type: object
                properties:
                  x-ray:
                    type: string
                    example: "93c330d4-7d84-4c1b-8fdb-54cec5bfe747"
    Error404:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            type: object
            required:
              - code
              - title
            properties:
              id:
                type: string
                example: "A123BCD"
              code:
                type: string
                example: "OPGDATA-API-NOTFOUND"
              title:
                type: string
                example: "Page not found"
              detail:
                type: string
                example: "That URL is not a valid route, or the item resource does not exist"
              meta:
                type: object
                properties:
                  x-ray:
                    type: string
                    example: "93c330d4-7d84-4c1b-8fdb-54cec5bfe747"
    Error410:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            type: object
            required:
              - code
              - title
            properties:
              id:
                type: string
                example: "A123BCD"
              code:
                type: string
                example: "DEFAULT_4XX"
              title:
                type: string
                example: "An LPA with the passed ID has been deleted from The Sirius data provider"
              detail:
                type: string
                example: ""
              meta:
                type: object
                properties:
                  x-ray:
                    type: string
                    example: "93c330d4-7d84-4c1b-8fdb-54cec5bfe747"
    Error413:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            type: object
            required:
              - code
              - title
            properties:
              id:
                type: string
                example: "A123BCD"
              code:
                type: string
                example: "OPGDATA-API-FILESIZELIMIT"
              title:
                type: string
                example: "Payload too large"
              detail:
                type: string
                example: "Payload too large, try and upload in smaller chunks"
              meta:
                type: object
                properties:
                  x-ray:
                    type: string
                    example: "93c330d4-7d84-4c1b-8fdb-54cec5bfe747"
    Error415:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            type: object
            required:
              - code
              - title
            properties:
              id:
                type: string
                example: "A123BCD"
              code:
                type: string
                example: "OPGDATA-API-MEDIA"
              title:
                type: string
                example: "Unsupported media type"
              detail:
                type: string
                example: "Unsupported media type for this endpoint"
              meta:
                type: object
                properties:
                  x-ray:
                    type: string
                    example: "93c330d4-7d84-4c1b-8fdb-54cec5bfe747"
    Error500:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            type: object
            required:
              - code
              - title
            properties:
              id:
                type: string
                example: "A123BCD"
              code:
                type: string
                example: "OPGDATA-API-SERVERERROR"
              title:
                type: string
                example: "Internal server error"
              detail:
                type: string
                example: "Something unexpected happened internally"
              meta:
                type: object
                properties:
                  x-ray:
                    type: string
                    example: "93c330d4-7d84-4c1b-8fdb-54cec5bfe747"
    Error503:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            type: object
            required:
              - code
              - title
            properties:
              id:
                type: string
                example: "A123BCD"
              code:
                type: string
                example: "OPGDATA-API-UNAVAILABLE"
              title:
                type: string
                example: "Service Unavailable"
              detail:
                type: string
                example: "Service is currently unavailable. Please try again later"
              meta:
                type: object
                properties:
                  x-ray:
                    type: string
                    example: "93c330d4-7d84-4c1b-8fdb-54cec5bfe747"
