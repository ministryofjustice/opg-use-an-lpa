#!/bin/sh

dslPath=$1
dslFullPath=$(pwd)$dslPath

# Get all .dsl files from the list of staged files
staged=$(git diff-index --cached HEAD --name-only | grep '\.dsl$' | sed -e 's/^/"source\//' -e 's/$/" /' | tr -d '\n')
stagedProcessed=$(git diff-index --cached HEAD --name-only | grep '\.mmd$' | sed -e 's/^/"source\//' -e 's/$/" /' | tr -d '\n')

if [ -z "$staged" ]; then
	# If no .dsl changes have occured, exit gracefully
	exit 0
elif [ -z "$stagedProcessed" ]; then
	echo "Staged .dsl files:"
	echo $staged

	# Check for the existence of Docker
	if ! type docker > /dev/null 2>&1; then
		echo "# Docker not installed or not in PATH"
		echo "Skipping PlantUML generation"
		exit 1
	fi

	exec 1>&2

	# Generate PlantUML files from structurizr. PlantUML is better supported with image generation tooling.
	echo "Generating PlantUML Files"
	generatePlantUml="docker run --rm -v $dslFullPath:/usr/local/structurizr structurizr/cli export -workspace /usr/local/structurizr/workspace.dsl -format plantuml"
	eval $generatePlantUml

	# Generate Mermaid files for visibility in Github
	echo "Generating Mermaid Files"
	generateMMD="docker run --rm -v $dslFullPath:/usr/local/structurizr structurizr/cli export -workspace /usr/local/structurizr/workspace.dsl -format mermaid"
	eval $generateMMD

	# Remove any resources created that have produced a key for the diagrams exported.
	echo "Remove files with key in their name"
	rm "$dslFullPath"/*-key*

	# Generate PNG files for each .puml file created
	echo "Generate PNG files"
	for filepath in $dslFullPath/*.puml; do
		[ -f "$filepath" ] || break
		# Generate diagrams for the staged .puml files
		generatePNG="docker run -v $dslFullPath:/data --rm -i dstockhammer/plantuml $(basename "$filepath")"
		eval $generatePNG
	done

	# Remove the generate puml files as we no longer need them once we have generated the images
	echo "Remove PlantUML Files"
	rm "$dslFullPath"/*.puml

	exit 0
fi
